MERGE INTO`shopify-pubsub-project.Data_Warehouse_Easyecom_Staging.All_Return_Order_items` AS target

USING (
select
  CAST(invoice_id AS STRING) AS invoice_id,
  CAST(order_id AS STRING) AS order_id,
  reference_code,
  order_date,
  JSON_EXTRACT_SCALAR(item_flat,'$[company_product_id]') AS company_product_id,
  JSON_EXTRACT_SCALAR(item_flat,'$[product_id]') AS product_id,
  JSON_EXTRACT_SCALAR(item_flat,'$[suborder_id]') AS suborder_id,
  JSON_EXTRACT_SCALAR(item_flat,'$[suborder_num]') AS suborder_num,
  JSON_EXTRACT_SCALAR(item_flat,'$[return_reason]') AS return_reason,
  JSON_EXTRACT_SCALAR(item_flat,'$[inventory_status]') AS inventory_status,
  JSON_EXTRACT_SCALAR(item_flat,'$[shipment_type]') AS shipment_type,
  CAST(JSON_EXTRACT_SCALAR(item_flat,'$[suborder_quantity]') AS FLOAT64) AS suborder_quantity,
  CAST(JSON_EXTRACT_SCALAR(item_flat,'$[returned_item_quantity]') AS FLOAT64) AS returned_item_quantity,
  JSON_EXTRACT_SCALAR(item_flat,'$[tax_type]') AS tax_type,
  CAST(JSON_EXTRACT_SCALAR(item_flat,'$[total_item_selling_price]') AS FLOAT64) AS total_item_selling_price,
  CAST(JSON_EXTRACT_SCALAR(item_flat,'$[credit_note_total_item_shipping_charge]') AS FLOAT64) AS credit_note_total_item_shipping_charge,
  CAST(JSON_EXTRACT_SCALAR(item_flat,'$[credit_note_total_item_miscellaneous]') AS FLOAT64) AS credit_note_total_item_miscellaneous,
  CAST(JSON_EXTRACT_SCALAR(item_flat,'$[item_tax_rate]') AS FLOAT64) AS item_tax_rate,
  CAST(JSON_EXTRACT_SCALAR(item_flat,'$[credit_note_total_item_tax]') AS FLOAT64) AS credit_note_total_item_tax,
  CAST(JSON_EXTRACT_SCALAR(item_flat,'$[credit_note_total_item_excluding_tax]') AS FLOAT64) AS credit_note_total_item_excluding_tax,
  JSON_EXTRACT_SCALAR(item_flat,'$[sku]') AS sku,
  JSON_EXTRACT_SCALAR(item_flat,'$[productName]') AS productName,
  JSON_EXTRACT_SCALAR(item_flat,'$[description]') AS description,
  JSON_EXTRACT_SCALAR(item_flat,'$[category]') AS category,
  JSON_EXTRACT_SCALAR(item_flat,'$[brand]') AS brand,
  JSON_EXTRACT_SCALAR(item_flat,'$[model_no]') AS model_no,
  JSON_EXTRACT_SCALAR(item_flat,'$[product_tax_code]') AS product_tax_code,
  JSON_EXTRACT_SCALAR(item_flat,'$[AccountingSku]') AS AccountingSku,
  JSON_EXTRACT_SCALAR(item_flat,'$[accounting_unit]') AS accounting_unit,
  JSON_EXTRACT_SCALAR(item_flat,'$[ean]') AS ean,
  JSON_EXTRACT_SCALAR(item_flat,'$[size]') AS size,
  CAST(JSON_EXTRACT_SCALAR(item_flat,'$[cost]') AS FLOAT64) AS cost,
  CAST(JSON_EXTRACT_SCALAR(item_flat,'$[mrp]') AS FLOAT64) AS mrp,
  CAST(JSON_EXTRACT_SCALAR(item_flat,'$[weight]') AS FLOAT64) AS weight,
  CAST(JSON_EXTRACT_SCALAR(item_flat,'$[length]') AS FLOAT64) AS length,
  CAST(JSON_EXTRACT_SCALAR(item_flat,'$[width]') AS FLOAT64) AS width,
  CAST(JSON_EXTRACT_SCALAR(item_flat,'$[height]') AS FLOAT64) AS height,
  JSON_EXTRACT_SCALAR(item_flat,'$[item_type]') AS item_type,
  JSON_EXTRACT_SCALAR(item_flat,'$[parent_sku]') AS parent_sku,
  JSON_EXTRACT_SCALAR(item_flat,'$[gatepass_number]') AS gatepass_number,
  JSON_EXTRACT_SCALAR(item_flat,'$[meta]') AS meta,
  
  
from 
(
SELECT distinct
invoice_id,
order_id,
reference_code,
order_date,
JSON_QUERY_ARRAY(items,'$') AS items_array,
row_number() over(partition by order_id order by order_date) as rn
FROM `shopify-pubsub-project.easycom.all_return_orders`),UNNEST(items_array) AS item_flat
WHERE rn =1 and date(order_date) >= DATE_SUB(CURRENT_DATE("Asia/Kolkata"), INTERVAL 10 DAY) 
) AS source
ON target.order_id = source.order_id
WHEN MATCHED and target.order_date < source.order_date
THEN UPDATE SET

target.invoice_id = source.invoice_id,
target.order_id = source.order_id,
target.reference_code = source.reference_code,
target.order_date = source.order_date,
target.company_product_id = source.company_product_id,
target.product_id = source.product_id,
target.suborder_id = source.suborder_id,
target.suborder_num = source.suborder_num,
target.return_reason = source.return_reason,
target.inventory_status = source.inventory_status,
target.shipment_type = source.shipment_type,
target.suborder_quantity = source.suborder_quantity,
target.returned_item_quantity = source.returned_item_quantity,
target.tax_type = source.tax_type,
target.total_item_selling_price = source.total_item_selling_price,
target.credit_note_total_item_shipping_charge = source.credit_note_total_item_shipping_charge,
target.credit_note_total_item_miscellaneous = source.credit_note_total_item_miscellaneous,
target.item_tax_rate = source.item_tax_rate,
target.credit_note_total_item_tax = source.credit_note_total_item_tax,
target.credit_note_total_item_excluding_tax = source.credit_note_total_item_excluding_tax,
target.sku = source.sku,
target.productName = source.productName,
target.description = source.description,
target.category = source.category,
target.brand = source.brand,
target.model_no = source.model_no,
target.product_tax_code = source.product_tax_code,
target.AccountingSku = source.AccountingSku,
target.accounting_unit = source.accounting_unit,
target.ean = source.ean,
target.size = source.size,
target.cost = source.cost,
target.mrp = source.mrp,
target.weight = source.weight,
target.length = source.length,
target.width = source.width,
target.height = source.height,
target.item_type = source.item_type,
target.parent_sku = source.parent_sku,
target.gatepass_number = source.gatepass_number,
target.meta = source.meta


WHEN NOT MATCHED THEN INSERT (
invoice_id,
order_id,
reference_code,
order_date,
company_product_id,
product_id,
suborder_id,
suborder_num,
return_reason,
inventory_status,
shipment_type,
suborder_quantity,
returned_item_quantity,
tax_type,
total_item_selling_price,
credit_note_total_item_shipping_charge,
credit_note_total_item_miscellaneous,
item_tax_rate,
credit_note_total_item_tax,
credit_note_total_item_excluding_tax,
sku,
productName,
description,
category,
brand,
model_no,
product_tax_code,
AccountingSku,
accounting_unit,
ean,
size,
cost,
mrp,
weight,
length,
width,
height,
item_type,
parent_sku,
gatepass_number,
meta
 )
  VALUES (
source.invoice_id,
source.order_id,
source.reference_code,
source.order_date,
source.company_product_id,
source.product_id,
source.suborder_id,
source.suborder_num,
source.return_reason,
source.inventory_status,
source.shipment_type,
source.suborder_quantity,
source.returned_item_quantity,
source.tax_type,
source.total_item_selling_price,
source.credit_note_total_item_shipping_charge,
source.credit_note_total_item_miscellaneous,
source.item_tax_rate,
source.credit_note_total_item_tax,
source.credit_note_total_item_excluding_tax,
source.sku,
source.productName,
source.description,
source.category,
source.brand,
source.model_no,
source.product_tax_code,
source.AccountingSku,
source.accounting_unit,
source.ean,
source.size,
source.cost,
source.mrp,
source.weight,
source.length,
source.width,
source.height,
source.item_type,
source.parent_sku,
source.gatepass_number,
source.meta
)